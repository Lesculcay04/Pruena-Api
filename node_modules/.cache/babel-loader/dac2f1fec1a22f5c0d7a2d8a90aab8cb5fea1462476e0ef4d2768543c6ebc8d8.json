{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\Desktop\\\\prueba-api\\\\src\\\\ChuckNorrisCard.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Card, Spin } from 'antd';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChuckNorrisCard = () => {\n  _s();\n  const [joke, setJoke] = useState({});\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get('https://api.chucknorris.io/jokes/random');\n        setJoke(response.data);\n        setLoading(false);\n      } catch (error) {\n        console.error('Error fetching Chuck Norris joke:', error);\n      }\n    };\n    fetchData();\n  }, []);\n  const fetchCocktailImage = async () => {\n    try {\n      const response = await axios.get('https://www.thecocktaildb.com/api/json/v1/1/search.php?s=margarita');\n      const cocktail = response.data.drinks[0];\n      setJoke({\n        icon_url: cocktail.strDrinkThumb\n      });\n      setLoading(false);\n    } catch (error) {\n      console.error('Error fetching cocktail image:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Card, {\n    title: joke.id ? 'Chuck Norris Joke' : 'Cocktail Image',\n    style: {\n      width: 300,\n      margin: 'auto',\n      marginTop: 20\n    },\n    cover: /*#__PURE__*/_jsxDEV(\"img\", {\n      alt: \"Chuck Norris or Cocktail\",\n      src: joke.icon_url\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 14\n    }, this),\n    children: loading ? /*#__PURE__*/_jsxDEV(Spin, {\n      size: \"large\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: joke.value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(ChuckNorrisCard, \"+vkq3ZVwcGNI8e/mFOnhxSGfehE=\");\n_c = ChuckNorrisCard;\nexport default ChuckNorrisCard;\nvar _c;\n$RefreshReg$(_c, \"ChuckNorrisCard\");","map":{"version":3,"names":["React","useEffect","useState","Card","Spin","axios","jsxDEV","_jsxDEV","ChuckNorrisCard","_s","joke","setJoke","loading","setLoading","fetchData","response","get","data","error","console","fetchCocktailImage","cocktail","drinks","icon_url","strDrinkThumb","title","id","style","width","margin","marginTop","cover","alt","src","fileName","_jsxFileName","lineNumber","columnNumber","children","size","value","_c","$RefreshReg$"],"sources":["C:/Users/PC/Desktop/prueba-api/src/ChuckNorrisCard.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Card, Spin } from 'antd';\r\nimport axios from 'axios';\r\n\r\ninterface Joke {\r\n  icon_url?: string;\r\n  id?: string;\r\n  value?: string;\r\n}\r\n\r\nconst ChuckNorrisCard: React.FC = () => {\r\n  const [joke, setJoke] = useState<Joke>({});\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await axios.get('https://api.chucknorris.io/jokes/random');\r\n        setJoke(response.data);\r\n        setLoading(false);\r\n      } catch (error) {\r\n        console.error('Error fetching Chuck Norris joke:', error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  const fetchCocktailImage = async () => {\r\n    try {\r\n      const response = await axios.get('https://www.thecocktaildb.com/api/json/v1/1/search.php?s=margarita');\r\n      const cocktail = response.data.drinks[0];\r\n      setJoke({ icon_url: cocktail.strDrinkThumb });\r\n      setLoading(false);\r\n    } catch (error) {\r\n      console.error('Error fetching cocktail image:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Card\r\n      title={joke.id ? 'Chuck Norris Joke' : 'Cocktail Image'}\r\n      style={{ width: 300, margin: 'auto', marginTop: 20 }}\r\n      cover={<img alt=\"Chuck Norris or Cocktail\" src={joke.icon_url} />}\r\n    >\r\n      {loading ? (\r\n        <Spin size=\"large\" />\r\n      ) : (\r\n        <p>{joke.value}</p>\r\n      )}\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default ChuckNorrisCard;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,IAAI,EAAEC,IAAI,QAAQ,MAAM;AACjC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAQ1B,MAAMC,eAAyB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAO,CAAC,CAAC,CAAC;EAC1C,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAE5CD,SAAS,CAAC,MAAM;IACd,MAAMa,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMV,KAAK,CAACW,GAAG,CAAC,yCAAyC,CAAC;QAC3EL,OAAO,CAACI,QAAQ,CAACE,IAAI,CAAC;QACtBJ,UAAU,CAAC,KAAK,CAAC;MACnB,CAAC,CAAC,OAAOK,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,mCAAmC,EAAEA,KAAK,CAAC;MAC3D;IACF,CAAC;IAEDJ,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMM,kBAAkB,GAAG,MAAAA,CAAA,KAAY;IACrC,IAAI;MACF,MAAML,QAAQ,GAAG,MAAMV,KAAK,CAACW,GAAG,CAAC,oEAAoE,CAAC;MACtG,MAAMK,QAAQ,GAAGN,QAAQ,CAACE,IAAI,CAACK,MAAM,CAAC,CAAC,CAAC;MACxCX,OAAO,CAAC;QAAEY,QAAQ,EAAEF,QAAQ,CAACG;MAAc,CAAC,CAAC;MAC7CX,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,CAAC,OAAOK,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;IACxD;EACF,CAAC;EAED,oBACEX,OAAA,CAACJ,IAAI;IACHsB,KAAK,EAAEf,IAAI,CAACgB,EAAE,GAAG,mBAAmB,GAAG,gBAAiB;IACxDC,KAAK,EAAE;MAAEC,KAAK,EAAE,GAAG;MAAEC,MAAM,EAAE,MAAM;MAAEC,SAAS,EAAE;IAAG,CAAE;IACrDC,KAAK,eAAExB,OAAA;MAAKyB,GAAG,EAAC,0BAA0B;MAACC,GAAG,EAAEvB,IAAI,CAACa;IAAS;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAE;IAAAC,QAAA,EAEjE1B,OAAO,gBACNL,OAAA,CAACH,IAAI;MAACmC,IAAI,EAAC;IAAO;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,gBAErB9B,OAAA;MAAA+B,QAAA,EAAI5B,IAAI,CAAC8B;IAAK;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI;EACnB;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACG,CAAC;AAEX,CAAC;AAAC5B,EAAA,CA1CID,eAAyB;AAAAiC,EAAA,GAAzBjC,eAAyB;AA4C/B,eAAeA,eAAe;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}