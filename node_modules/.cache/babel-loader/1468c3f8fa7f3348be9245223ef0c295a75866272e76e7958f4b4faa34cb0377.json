{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\Desktop\\\\prueba-api\\\\src\\\\ChuckNorrisCard.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Card, Spin } from 'antd';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChuckNorrisCard = () => {\n  _s();\n  const [joke, setJoke] = useState({});\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get('https://api.chucknorris.io/jokes/random');\n        setJoke(response.data);\n        setLoading(false);\n      } catch (error) {\n        console.error('Error fetching Chuck Norris joke:', error);\n      }\n    };\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Card, {\n    title: \"Chuck Norris Joke\",\n    style: {\n      width: 300,\n      margin: 'auto',\n      marginTop: 20\n    },\n    cover: /*#__PURE__*/_jsxDEV(\"img\", {\n      alt: \"Chuck Norris\",\n      src: joke.icon_url\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 14\n    }, this),\n    children: loading ? /*#__PURE__*/_jsxDEV(Spin, {\n      size: \"large\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"ID:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this), \" \", joke.id, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Value:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this), \" \", joke.value]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_s(ChuckNorrisCard, \"+vkq3ZVwcGNI8e/mFOnhxSGfehE=\");\n_c = ChuckNorrisCard;\nexport default ChuckNorrisCard;\nvar _c;\n$RefreshReg$(_c, \"ChuckNorrisCard\");","map":{"version":3,"names":["React","useEffect","useState","Card","Spin","axios","jsxDEV","_jsxDEV","ChuckNorrisCard","_s","joke","setJoke","loading","setLoading","fetchData","response","get","data","error","console","title","style","width","margin","marginTop","cover","alt","src","icon_url","fileName","_jsxFileName","lineNumber","columnNumber","children","size","id","value","_c","$RefreshReg$"],"sources":["C:/Users/PC/Desktop/prueba-api/src/ChuckNorrisCard.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Card, Spin } from 'antd';\r\nimport axios from 'axios';\r\n\r\nconst ChuckNorrisCard: React.FC = () => {\r\n  const [joke, setJoke] = useState<any>({});\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await axios.get('https://api.chucknorris.io/jokes/random');\r\n        setJoke(response.data);\r\n        setLoading(false);\r\n      } catch (error) {\r\n        console.error('Error fetching Chuck Norris joke:', error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  return (\r\n    <Card\r\n      title=\"Chuck Norris Joke\"\r\n      style={{ width: 300, margin: 'auto', marginTop: 20 }}\r\n      cover={<img alt=\"Chuck Norris\" src={joke.icon_url} />}\r\n    >\r\n      {loading ? (\r\n        <Spin size=\"large\" />\r\n      ) : (\r\n        <p>\r\n          <strong>ID:</strong> {joke.id}\r\n          <br />\r\n          <strong>Value:</strong> {joke.value}\r\n        </p>\r\n      )}\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default ChuckNorrisCard;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,IAAI,EAAEC,IAAI,QAAQ,MAAM;AACjC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,eAAyB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAM,CAAC,CAAC,CAAC;EACzC,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAE5CD,SAAS,CAAC,MAAM;IACd,MAAMa,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMV,KAAK,CAACW,GAAG,CAAC,yCAAyC,CAAC;QAC3EL,OAAO,CAACI,QAAQ,CAACE,IAAI,CAAC;QACtBJ,UAAU,CAAC,KAAK,CAAC;MACnB,CAAC,CAAC,OAAOK,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,mCAAmC,EAAEA,KAAK,CAAC;MAC3D;IACF,CAAC;IAEDJ,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEP,OAAA,CAACJ,IAAI;IACHiB,KAAK,EAAC,mBAAmB;IACzBC,KAAK,EAAE;MAAEC,KAAK,EAAE,GAAG;MAAEC,MAAM,EAAE,MAAM;MAAEC,SAAS,EAAE;IAAG,CAAE;IACrDC,KAAK,eAAElB,OAAA;MAAKmB,GAAG,EAAC,cAAc;MAACC,GAAG,EAAEjB,IAAI,CAACkB;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAE;IAAAC,QAAA,EAErDrB,OAAO,gBACNL,OAAA,CAACH,IAAI;MAAC8B,IAAI,EAAC;IAAO;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,gBAErBzB,OAAA;MAAA0B,QAAA,gBACE1B,OAAA;QAAA0B,QAAA,EAAQ;MAAG;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,KAAC,EAACtB,IAAI,CAACyB,EAAE,eAC7B5B,OAAA;QAAAsB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACNzB,OAAA;QAAA0B,QAAA,EAAQ;MAAM;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,KAAC,EAACtB,IAAI,CAAC0B,KAAK;IAAA;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClC;EACJ;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACG,CAAC;AAEX,CAAC;AAACvB,EAAA,CAnCID,eAAyB;AAAA6B,EAAA,GAAzB7B,eAAyB;AAqC/B,eAAeA,eAAe;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}