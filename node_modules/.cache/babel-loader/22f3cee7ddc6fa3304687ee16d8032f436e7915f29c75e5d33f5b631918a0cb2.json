{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\Desktop\\\\prueba-api\\\\src\\\\ChuckNorrisCard.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Card, Spin } from 'antd';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChuckNorrisCard = () => {\n  _s();\n  const [joke, setJoke] = useState({});\n  const [cocktail, setCocktail] = useState({});\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const fetchChuckNorrisJoke = async () => {\n      try {\n        const response = await axios.get('https://api.chucknorris.io/jokes/random');\n        setJoke(response.data);\n      } catch (error) {\n        console.error('Error fetching Chuck Norris joke:', error);\n      }\n    };\n    const fetchCocktail = async () => {\n      try {\n        const cocktailResponse = await axios.get('https://www.thecocktaildb.com/api/json/v1/1/search.php?s=margarita');\n        setCocktail(cocktailResponse.data.drinks[0]);\n        setLoading(false);\n      } catch (error) {\n        console.error('Error fetching cocktail:', error);\n      }\n    };\n    fetchChuckNorrisJoke();\n    fetchCocktail();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Card, {\n    title: \"Chuck Norris Joke and Cocktail\",\n    style: {\n      width: 300,\n      margin: 'auto',\n      marginTop: 20\n    },\n    cover: /*#__PURE__*/_jsxDEV(\"img\", {\n      alt: \"Chuck Norris\",\n      src: joke.icon_url\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 16\n    }, this),\n    children: loading ? /*#__PURE__*/_jsxDEV(Spin, {\n      size: \"large\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"ID:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 15\n        }, this), \" \", joke.id, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Value:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 15\n        }, this), \" \", joke.value]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Cocktail Glass:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 15\n        }, this), \" \", cocktail.strInstructions]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 7\n  }, this);\n};\n_s(ChuckNorrisCard, \"ZLE4werekYzTNRnESR6k1BjXjCo=\");\n_c = ChuckNorrisCard;\nexport default ChuckNorrisCard;\nvar _c;\n$RefreshReg$(_c, \"ChuckNorrisCard\");","map":{"version":3,"names":["React","useEffect","useState","Card","Spin","axios","jsxDEV","_jsxDEV","ChuckNorrisCard","_s","joke","setJoke","cocktail","setCocktail","loading","setLoading","fetchChuckNorrisJoke","response","get","data","error","console","fetchCocktail","cocktailResponse","drinks","title","style","width","margin","marginTop","cover","alt","src","icon_url","fileName","_jsxFileName","lineNumber","columnNumber","children","size","id","value","strInstructions","_c","$RefreshReg$"],"sources":["C:/Users/PC/Desktop/prueba-api/src/ChuckNorrisCard.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Card, Spin } from 'antd';\r\nimport axios from 'axios';\r\n\r\nconst ChuckNorrisCard: React.FC = () => {\r\n    const [joke, setJoke] = useState<any>({});\r\n    const [cocktail, setCocktail] = useState<any>({});\r\n    const [loading, setLoading] = useState(true);\r\n  \r\n    useEffect(() => {\r\n      const fetchChuckNorrisJoke = async () => {\r\n        try {\r\n          const response = await axios.get('https://api.chucknorris.io/jokes/random');\r\n          setJoke(response.data);\r\n        } catch (error) {\r\n          console.error('Error fetching Chuck Norris joke:', error);\r\n        }\r\n      };\r\n  \r\n      const fetchCocktail = async () => {\r\n        try {\r\n          const cocktailResponse = await axios.get('https://www.thecocktaildb.com/api/json/v1/1/search.php?s=margarita');\r\n          setCocktail(cocktailResponse.data.drinks[0]);\r\n          setLoading(false);\r\n        } catch (error) {\r\n          console.error('Error fetching cocktail:', error);\r\n        }\r\n      };\r\n  \r\n      fetchChuckNorrisJoke();\r\n      fetchCocktail();\r\n    }, []);\r\n  \r\n    return (\r\n      <Card\r\n        title=\"Chuck Norris Joke and Cocktail\"\r\n        style={{ width: 300, margin: 'auto', marginTop: 20 }}\r\n        cover={<img alt=\"Chuck Norris\" src={joke.icon_url} />}\r\n      >\r\n        {loading ? (\r\n          <Spin size=\"large\" />\r\n        ) : (\r\n          <div>\r\n            <p>\r\n              <strong>ID:</strong> {joke.id}\r\n              <br />\r\n              <strong>Value:</strong> {joke.value}\r\n            </p>\r\n            <p>\r\n              <strong>Cocktail Glass:</strong> {cocktail.strInstructions}\r\n            </p>\r\n          </div>\r\n        )}\r\n      </Card>\r\n    );\r\n  };\r\n  \r\n  export default ChuckNorrisCard;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}